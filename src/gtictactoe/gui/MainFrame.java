package gtictactoe.gui;

import gtictactoe.game.Controller;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

public class MainFrame extends javax.swing.JFrame {

    private static MainFrame mainFrame = null;
    private byte player;
    private static final byte X = 1;
    private static final byte O = 2;
    private final ImageIcon xIcon, oIcon, wIcon;
    private final List<JButton> buttons;
    private boolean humanVSHuman;

    /**
     * Creates new form MainFrame
     */
    private MainFrame() {
        initComponents();
        this.setTitle("G Tic Tac Toe - Human vs Human");
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        buttons = new ArrayList<>();
        buttons.add(jButton00);
        buttons.add(jButton01);
        buttons.add(jButton02);
        buttons.add(jButton10);
        buttons.add(jButton11);
        buttons.add(jButton12);
        buttons.add(jButton20);
        buttons.add(jButton21);
        buttons.add(jButton22);

        humanVSHuman = true;

        xIcon = new ImageIcon(getClass().getResource("/gtictactoe/pictures/x.png"));
        oIcon = new ImageIcon(getClass().getResource("/gtictactoe/pictures/o.png"));
        wIcon = new ImageIcon(getClass().getResource("/gtictactoe/pictures/w.png"));

        Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
        int x = (int) ((dimension.getWidth() - this.getWidth()) / 2);
        int y = (int) ((dimension.getHeight() - this.getHeight()) / 2);
        this.setLocation(x, y);

        player = X;
        jLabelStatus.setText("User's " + player + " turn");
    }

    public void emitButtonEvent(int i, int j) {
        int pos = i * 3 + j;
        buttons.get(pos).doClick();
    }

    public static byte X() {
        return X;
    }

    public static byte O() {
        return O;
    }

    public void updatePlayer() {
        player = player == X ? O : X;
        if (!humanVSHuman) {
            if (player == O) {
                this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            } else {
                this.setCursor(Cursor.getDefaultCursor());
            }
        }

        jLabelStatus.setText("User's " + player + " turn");
    }

    public void drawResult() {
        JOptionPane.showMessageDialog(this, "Draw. Congratulations to both!");
        jLabelStatus.setText("It's a draw");
        for (JButton button : buttons) {
            button.setEnabled(false);
        }
        this.setCursor(Cursor.getDefaultCursor());
    }

    public void winnerFound() {
        JOptionPane.showMessageDialog(this, "User " + player + " is the winner. Congratulations!");
        jLabelStatus.setText("User " + player + " is the winner");

        for (JButton button : buttons) {
            button.setEnabled(false);
        }
        this.setCursor(Cursor.getDefaultCursor());
    }

    public static MainFrame getInstance() {
        if (mainFrame == null) {
            mainFrame = new MainFrame();
        }

        return mainFrame;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jButton21 = new javax.swing.JButton();
        jButton22 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton00 = new javax.swing.JButton();
        jButton01 = new javax.swing.JButton();
        jButton02 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        jLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabelStatus = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        newHHMenuItem = new javax.swing.JMenuItem();
        newHMMenuItem = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem3 = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        jMenuItem2.setText("jMenuItem2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setForeground(java.awt.Color.black);
        setName("mainframe"); // NOI18N
        setResizable(false);

        jButton21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gtictactoe/pictures/w.png"))); // NOI18N
        jButton21.setToolTipText("");
        jButton21.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jButton21.setMaximumSize(new java.awt.Dimension(128, 128));
        jButton21.setMinimumSize(new java.awt.Dimension(128, 128));
        jButton21.setPreferredSize(new java.awt.Dimension(128, 128));
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });

        jButton22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gtictactoe/pictures/w.png"))); // NOI18N
        jButton22.setToolTipText("");
        jButton22.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jButton22.setMaximumSize(new java.awt.Dimension(128, 128));
        jButton22.setMinimumSize(new java.awt.Dimension(128, 128));
        jButton22.setPreferredSize(new java.awt.Dimension(128, 128));
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });

        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gtictactoe/pictures/w.png"))); // NOI18N
        jButton10.setToolTipText("");
        jButton10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jButton10.setMaximumSize(new java.awt.Dimension(128, 128));
        jButton10.setMinimumSize(new java.awt.Dimension(128, 128));
        jButton10.setPreferredSize(new java.awt.Dimension(128, 128));
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gtictactoe/pictures/w.png"))); // NOI18N
        jButton11.setToolTipText("");
        jButton11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jButton11.setMaximumSize(new java.awt.Dimension(128, 128));
        jButton11.setMinimumSize(new java.awt.Dimension(128, 128));
        jButton11.setPreferredSize(new java.awt.Dimension(128, 128));
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gtictactoe/pictures/w.png"))); // NOI18N
        jButton12.setToolTipText("");
        jButton12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jButton12.setMaximumSize(new java.awt.Dimension(128, 128));
        jButton12.setMinimumSize(new java.awt.Dimension(128, 128));
        jButton12.setPreferredSize(new java.awt.Dimension(128, 128));
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton00.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gtictactoe/pictures/w.png"))); // NOI18N
        jButton00.setToolTipText("");
        jButton00.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jButton00.setMaximumSize(new java.awt.Dimension(128, 128));
        jButton00.setMinimumSize(new java.awt.Dimension(128, 128));
        jButton00.setPreferredSize(new java.awt.Dimension(128, 128));
        jButton00.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton00ActionPerformed(evt);
            }
        });

        jButton01.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gtictactoe/pictures/w.png"))); // NOI18N
        jButton01.setToolTipText("");
        jButton01.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jButton01.setMaximumSize(new java.awt.Dimension(128, 128));
        jButton01.setMinimumSize(new java.awt.Dimension(128, 128));
        jButton01.setPreferredSize(new java.awt.Dimension(128, 128));
        jButton01.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton01ActionPerformed(evt);
            }
        });

        jButton02.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gtictactoe/pictures/w.png"))); // NOI18N
        jButton02.setToolTipText("");
        jButton02.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jButton02.setMaximumSize(new java.awt.Dimension(128, 128));
        jButton02.setMinimumSize(new java.awt.Dimension(128, 128));
        jButton02.setPreferredSize(new java.awt.Dimension(128, 128));
        jButton02.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton02ActionPerformed(evt);
            }
        });

        jButton20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gtictactoe/pictures/w.png"))); // NOI18N
        jButton20.setToolTipText("");
        jButton20.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jButton20.setMaximumSize(new java.awt.Dimension(128, 128));
        jButton20.setMinimumSize(new java.awt.Dimension(128, 128));
        jButton20.setPreferredSize(new java.awt.Dimension(128, 128));
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });

        jLabel.setText("Status:");

        jLabelStatus.setText("User's Turn");

        fileMenu.setText("File");
        fileMenu.setName(""); // NOI18N

        newHHMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        newHHMenuItem.setText("New - H vs H");
        newHHMenuItem.setToolTipText("");
        newHHMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newHHMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(newHHMenuItem);

        newHMMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.CTRL_MASK));
        newHMMenuItem.setText("New - H vs M");
        newHMMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newHMMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(newHMMenuItem);
        fileMenu.add(jSeparator2);
        fileMenu.add(jSeparator1);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Exit");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        fileMenu.add(jMenuItem3);

        jMenuBar1.add(fileMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton00, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton01, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton02, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jButton21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(101, 101, 101)
                                        .addComponent(jLabel2))
                                    .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelStatus)))
                .addGap(0, 10, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton00, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton01, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton02, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel)
                    .addComponent(jLabel2)
                    .addComponent(jLabelStatus)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newHHMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newHHMenuItemActionPerformed
        // TODO add your handling code here:
        Controller.getInstance().reset();
        this.setTitle("G Tic Tac Toe - Human vs Human");
        for (int i = 0; i < buttons.size(); i++) {
            buttons.get(i).setIcon(wIcon);
            buttons.get(i).setEnabled(true);
        }
        humanVSHuman = true;
        player = X;
        jLabelStatus.setText("User's " + player + " turn");
    }//GEN-LAST:event_newHHMenuItemActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        // TODO add your handling code here:
        jButton22.setEnabled(false);
        jButton22.setIcon(player == X ? xIcon : oIcon);
        Controller.getInstance().onClick(2, 2, player, humanVSHuman);
    }//GEN-LAST:event_jButton22ActionPerformed

    private void jButton00ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton00ActionPerformed
        // TODO add your handling code here:
        jButton00.setEnabled(false);
        jButton00.setIcon(player == X ? xIcon : oIcon);
        Controller.getInstance().onClick(0, 0, player, humanVSHuman);
    }//GEN-LAST:event_jButton00ActionPerformed

    private void jButton01ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton01ActionPerformed
        // TODO add your handling code here:
        jButton01.setEnabled(false);
        jButton01.setIcon(player == X ? xIcon : oIcon);
        Controller.getInstance().onClick(0, 1, player, humanVSHuman);
    }//GEN-LAST:event_jButton01ActionPerformed

    private void jButton02ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton02ActionPerformed
        // TODO add your handling code here:
        jButton02.setEnabled(false);
        jButton02.setIcon(player == X ? xIcon : oIcon);
        Controller.getInstance().onClick(0, 2, player, humanVSHuman);
    }//GEN-LAST:event_jButton02ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        jButton10.setEnabled(false);
        jButton10.setIcon(player == X ? xIcon : oIcon);
        Controller.getInstance().onClick(1, 0, player, humanVSHuman);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        jButton11.setEnabled(false);
        jButton11.setIcon(player == X ? xIcon : oIcon);
        Controller.getInstance().onClick(1, 1, player, humanVSHuman);
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        jButton12.setEnabled(false);
        jButton12.setIcon(player == X ? xIcon : oIcon);
        Controller.getInstance().onClick(1, 2, player, humanVSHuman);
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        // TODO add your handling code here:
        jButton20.setEnabled(false);
        jButton20.setIcon(player == X ? xIcon : oIcon);
        Controller.getInstance().onClick(2, 0, player, humanVSHuman);
    }//GEN-LAST:event_jButton20ActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        // TODO add your handling code here:  
        jButton21.setEnabled(false);
        jButton21.setIcon(player == X ? xIcon : oIcon);
        Controller.getInstance().onClick(2, 1, player, humanVSHuman);
    }//GEN-LAST:event_jButton21ActionPerformed

    private void newHMMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newHMMenuItemActionPerformed
        // TODO add your handling code here:
        Controller.getInstance().reset();
        this.setTitle("G Tic Tac Toe - Human vs Machine");
        for (int i = 0; i < buttons.size(); i++) {
            buttons.get(i).setIcon(wIcon);
            buttons.get(i).setEnabled(true);
        }
        humanVSHuman = false;
        player = X;
        jLabelStatus.setText("User's " + player + " turn");
    }//GEN-LAST:event_newHMMenuItemActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu fileMenu;
    private javax.swing.JButton jButton00;
    private javax.swing.JButton jButton01;
    private javax.swing.JButton jButton02;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JLabel jLabel;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelStatus;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JMenuItem newHHMenuItem;
    private javax.swing.JMenuItem newHMMenuItem;
    // End of variables declaration//GEN-END:variables
}
